from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup

from src.database.models import User, Profile
from src.database import AsyncSession

router = Router()

class Registration(StatesGroup):
    waiting_for_invite = State()
    waiting_for_name = State()
    waiting_for_age = State()
    waiting_for_university = State()
    waiting_for_bio = State()
    waiting_for_interests = State()

@router.message(Command("start"))
async def cmd_start(message: Message, session: AsyncSession):
    # Check if user exists
    user = await session.get(User, message.from_user.id)
    
    if not user:
        await message.answer(
            "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ —Å—Ä–µ–¥–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.\n\n"
            "–î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –º–Ω–µ –Ω—É–∂–µ–Ω –∏–Ω–≤–∞–π—Ç-–∫–æ–¥. "
            "–ü–æ–ø—Ä–æ—Å–∏—Ç–µ –µ–≥–æ —É –¥—Ä—É–≥–∞, –∫–æ—Ç–æ—Ä—ã–π —É–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –±–æ—Ç–∞."
        )
        # TODO: Implement invite code handling
    else:
        await message.answer(
            f"–° –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ–º, {user.username}!\n\n"
            "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /profile –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Ñ–∏–ª—è\n"
            "/find –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞\n"
            "/invite –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–Ω–≤–∞–π—Ç-–∫–æ–¥–∞–º–∏"
        )

@router.message(Command("help"))
async def cmd_help(message: Message):
    await message.answer(
        "ü§ñ –Ø –±–æ—Ç –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤ —Å—Ä–µ–¥–∏ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.\n\n"
        "–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/profile - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ñ–∏–ª–µ–º\n"
        "/find - –ù–∞–π—Ç–∏ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞\n"
        "/invite - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–Ω–≤–∞–π—Ç-–∫–æ–¥–∞–º–∏\n"
        "/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    ) 